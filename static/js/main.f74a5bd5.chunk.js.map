{"version":3,"sources":["components/Form.js","components/Navigation.js","components/Header.js","components/Initial.js","components/config.js","components/NoImages.js","components/Image.js","components/Gallery.js","components/Loader.js","components/Container.js","components/Beksinski.js","components/Magritte.js","components/Kahlo.js","components/Chihuly.js","components/Search.js","components/NotFound.js","App.js","serviceWorker.js","index.js"],"names":["Form","state","searchEntry","updateSearchInput","e","_this","setState","target","value","_this2","this","searchInput","history","props","react_default","a","createElement","className","onSubmit","handleSubmit","type","name","placeholder","onChange","height","width","d","fill","fillRule","Component","Navigation","react_router_dom","to","Header","components_Form","components_Navigation","Initial","apiKey","NoImages","Image","src","url","alt","title","Gallery","images","noImages","results","data","length","map","image","farm","server","id","secret","concat","components_Image","key","components_NoImages","Loader","Container","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","runSearch","query","axios","get","then","response","photos","photo","loading","catch","error","console","log","searchTerm","prevProps","components_Loader","components_Gallery","Beksinski","components_Container","Magritte","Kahlo","Chihuly","Search","NotFound","App","preventDefault","currentTarget","reset","push","react_router","render","components_Header","exact","path","component","components_Beksinski","components_Magritte","components_Kahlo","components_Chihuly","components_Search","match","params","Boolean","window","location","hostname","ReactDOM","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.f74a5bd5.chunk.js","sourcesContent":["import React, { Component } from 'react';\n\nclass Form extends Component {\n\n  state = {\n    searchEntry: ''\n  }\n\n// update search text state\n\n  updateSearchInput = (e) => {\n    this.setState({\n      searchEntry: e.target.value\n    });\n  }\n\n  render() {\n    let searchInput= this.state.searchEntry;\n    let history = this.props.history;\n    return (\n      <form className=\"search-form\"\n            onSubmit={ e => this.props.handleSubmit(e, history, searchInput)}>\n        <input  type=\"text\"\n                name=\"search\"\n                placeholder=\"Search...\"\n                onChange={this.updateSearchInput}\n                />\n        <button type=\"submit\" className=\"search-button\">\n          <svg height=\"32\" width=\"32\">\n            <path d=\"M19.427 21.427a8.5 8.5 0 1 1 2-2l5.585 5.585c.55.55.546 1.43 0 1.976l-.024.024a1.399 1.399 0 0 1-1.976 0l-5.585-5.585zM14.5 21a6.5 6.5 0 1 0 0-13 6.5 6.5 0 0 0 0 13z\" fill=\"#ffffff\" fillRule=\"evenodd\"/>\n          </svg>\n        </button>\n      </form>\n    );\n  }\n}\n\nexport default Form;\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\n\nconst Navigation = () => {\n  return (\n    <nav className=\"main-nav\">\n      <ul>\n        <li><NavLink to=\"/beksinski\">Beksinski</NavLink></li>\n        <li><NavLink to=\"/magritte\">Magritte</NavLink></li>\n        <li><NavLink to=\"/kahlo\">Kahlo</NavLink></li>\n        <li><NavLink to=\"/chihuly\">Chihuly</NavLink></li>\n      </ul>\n    </nav>\n  );\n}\n\nexport default Navigation;\n","import React, { Component } from 'react';\n\nimport Form from './Form';\nimport Navigation from './Navigation';\n\nclass Header extends Component {\n  render() {\n    return (\n      <div>\n        <h1>SnapScout &trade;</h1> \n        <Form history={this.props.history} handleSubmit={this.props.handleSubmit} />\n        <Navigation />\n      </div>\n    );\n  }\n}\n\nexport default Header;\n","import React from 'react';\n\nconst Initial = () => {\n  return (\n      <p>Enter a search term or click a link to browse images.</p>\n  );\n};\n\nexport default Initial;\n","const apiKey = '5d8e489009436b64cec5c939ae56b10c';\n\nexport default apiKey;\n","import React from 'react';\n\nconst NoImages = () => (\n  <div>\n    <h2>No Images Found</h2>\n    <p>Try a different search term?</p>\n  </div>\n);\n\nexport default NoImages;\n","import React from 'react';\n\nconst Image = props => (\n  <li>\n    <img src={props.url} alt={props.title} />\n  </li>\n);\n\nexport default Image;\n","import React from 'react';\nimport NoImages from './NoImages';\nimport Image from './Image';\n\n\nconst Gallery = (props) => {\n  const results = props.data;\n  let images;\n  let noImages;\n\n// map variables to each item in fetched image array and return image component\n\n  if (results.length > 0) {\n    images = results.map(image => {\n      let farm = image.farm;\n      let server = image.server;\n      let id = image.id;\n      let secret = image.secret;\n      let title = image.title;\n      let url = `https://farm${farm}.staticflickr.com/${server}/${id}_${secret}_m.jpg`;\n      return <Image url={url} key={id} alt={title} />\n    });\n  } else {\n    noImages = <NoImages />   // return 'not found' component if no images fetched\n  }\n\n  return (\n    <div>\n      <ul>\n        { images }\n      </ul>\n      { noImages }\n    </div>\n  );\n};\n\n\n\nexport default Gallery;\n","import React from 'react';\n\nconst Loader = () => {\n  return (\n    <div className=\"loader\">\n    </div>\n  );\n}\n\nexport default Loader;\n","import React, { Component } from 'react';\nimport axios from 'axios';\nimport apiKey from './config';\n\n// import app components\n\nimport Gallery from './Gallery';\nimport Loader from './Loader';\n\nclass Container extends Component {\n// initialize state\n  constructor(props) {\n    super(props);\n    this.state = {\n      images: [],\n      loading: true\n    }\n  }\n\n// load images\n  componentDidMount() {\n    this.runSearch(this.props.searchTerm);\n  }\n\n// load new images for new search\n  componentDidUpdate(prevProps) {\n    if (prevProps.searchTerm !== this.props.searchTerm) {\n      this.runSearch(this.props.searchTerm);\n    }\n  }\n\n// fetch data\n\n  runSearch = (query) => {\n    axios.get(`https://api.flickr.com/services/rest/?method=flickr.photos.search&api_key=${apiKey}&tags=${query}&per_page=24&format=json&nojsoncallback=1`)\n      .then(response => {\n        this.setState({\n          images: response.data.photos.photo,\n          loading: false\n        });\n      })\n      .catch(error => {\n        console.log('Encountered an error with fetching and parsing data', error);\n      });\n  }\n\n\n\n  render() {\n    return (\n      <div className=\"photo-container\">\n        {\n          (this.state.loading)\n          ? <Loader />\n          : <Gallery data={this.state.images} />\n        }\n      </div>\n\n\n    );\n  }\n}\n\nexport default Container;\n","import React from 'react';\nimport Container from './Container';\n\nconst Beksinski = (props) => {\n  return (\n    <div>\n      <h2>{ props.searchTerm } Pictures</h2>\n      <Container searchTerm={ props.searchTerm } />\n    </div>\n  );\n};\n\nexport default Beksinski; \n","import React from 'react';\nimport Container from './Container';\n\nconst Magritte = (props) => {\n  return (\n    <div>\n      <h2>{ props.searchTerm } Pictures</h2>\n      <Container searchTerm={ props.searchTerm } />\n    </div>\n  );\n};\n\nexport default Magritte; \n","import React from 'react';\nimport Container from './Container';\n\nconst Kahlo = (props) => {\n  return (\n    <div>\n      <h2>{ props.searchTerm } Pictures</h2>\n      <Container searchTerm={ props.searchTerm } />\n    </div>\n  );\n};\n\nexport default Kahlo; \n","import React from 'react';\nimport Container from './Container'; \n\nconst Chihuly = (props) => {\n  return (\n    <div>\n      <h2>{ props.searchTerm } Pictures</h2>\n      <Container searchTerm={ props.searchTerm } />\n    </div>\n  );\n}\n\nexport default Chihuly;\n","import React from 'react';\nimport Container from './Container';\n\nconst Search = (props) => {\n  return (\n    <div>\n      <h2>{ props.searchTerm } Images</h2>\n      <Container searchTerm={ props.searchTerm } />\n    </div>\n  );\n};\n\nexport default Search;\n","import React from 'react';\n\nconst NotFound = () => (\n  <div className=\"not-found\">\n    <h2>Page Not Found</h2>\n    <p>Better luck next time.</p>\n  </div>\n);\n\nexport default NotFound;\n","import React, { Component } from 'react';\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\nimport './App.css';\n\n// import app components\nimport Header from './components/Header';\nimport Initial from './components/Initial';\nimport Beksinski from './components/Beksinski';\nimport Magritte from './components/Magritte';\nimport Kahlo from './components/Kahlo';\nimport Chihuly from './components/Chihuly';\nimport Search from './components/Search';\nimport NotFound from './components/NotFound';\n\nclass App extends Component {\n  // Prevent page reload, clear input, set URL and push history on submit\n  handleSubmit = (e, history, searchInput) => {\n    e.preventDefault();\n    e.currentTarget.reset();\n    let url = `/search/${searchInput}`;\n    history.push(url);\n  }\n\n  render() {\n    return (\n      <BrowserRouter>\n        <div className=\"container\">\n          <Route render={ props => <Header handleSubmit={this.handleSubmit} history={props.history} /> } />\n          <Switch>\n            <Route exact path=\"/\" component={Initial} />\n            <Route path=\"/beksinski\" render={() => <Beksinski searchTerm=\"beksinski\" />} />\n            <Route path=\"/magritte\" render={() => <Magritte searchTerm=\"magritte\" />} />\n            <Route path=\"/kahlo\" render={() => <Kahlo searchTerm=\"kahlo\" />} />\n            <Route path=\"/chihuly\" render={() => <Chihuly searchTerm=\"chihuly\" />} />\n            <Route path=\"/search/:searchInput\" render={(props) => <Search searchTerm={props.match.params.searchInput} />} />\n            <Route component={NotFound} />\n          </Switch>\n        </div>\n      </BrowserRouter>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}